name: Sync e Validação de Conteúdo

on:
  push:
    branches:
      - conteudo
  workflow_dispatch:

jobs:
  validate:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Validar YAML
        run: |
          find . -type f \( -name '*.yaml' -o -name '*.yml' \) | xargs -I {} yamllint {}

      - name: Validar Markdown (links quebrados)
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          config-file: '.mlc_config.json'

  sync-content:
    if: github.ref == 'refs/heads/conteudo'
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch main
        uses: actions/checkout@v4
        with:
          ref: main
          path: main_branch

      - name: Checkout branch conteudo
        uses: actions/checkout@v4
        with:
          ref: conteudo
          path: conteudo_branch

      - name: Sincronizar conteúdo permitido
        run: |
          rsync -av --delete conteudo_branch/content/ main_branch/content/
          rsync -av conteudo_branch/config.toml main_branch/config.toml
          rsync -av conteudo_branch/README.md main_branch/README.md
          rsync -av conteudo_branch/static/robots.txt main_branch/static/robots.txt
          rsync -av --delete conteudo_branch/static/uploads/ main_branch/static/uploads/
          cd main_branch
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet; then
            git add .
            git commit -m "chore(content): sincroniza conteúdo da branch conteudo"
            git push origin main
          else
            echo "Nenhuma alteração detectada, pulando commit."
          fi

  auto-tag:
    if: github.ref == 'refs/heads/conteudo'
    needs: sync-content
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          path: main_branch

      - id: create_tag
        name: Criar nova tag na main
        run: |
          cd main_branch
          latest_tag=$(git tag -l "v*.*.*" --sort=-v:refname | head -n 1)
          if [ -z "$latest_tag" ]; then
            new_tag="v0.0.1"
          else
            IFS='.' read -r major minor patch <<< "${latest_tag#v}"
            new_tag="v${major}.${minor}.$((patch + 1))"
          fi
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "$new_tag"
          git push origin "$new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT
     
      - name: Disparar workflow de deploy via API
        env:
          REPO: ${{ github.repository }}
          NEW_TAG: ${{ steps.create_tag.outputs.new_tag }}
          TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $TOKEN" \
            https://api.github.com/repos/$REPO/actions/workflows/deploy.yml/dispatches \
            -d "{\"ref\":\"main\"}"

  sync-back-content:
    if: github.ref == 'refs/heads/conteudo'
    needs: auto-tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch conteudo
        uses: actions/checkout@v4
        with:
          ref: conteudo
          path: conteudo_branch

      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          path: main_branch

      - name: Sincronizar alterações de conteúdo da main para conteudo
        run: |
          rsync -av --delete main_branch/content/ conteudo_branch/content/
          rsync -av main_branch/config.toml conteudo_branch/config.toml
          rsync -av main_branch/README.md conteudo_branch/README.md
          rsync -av main_branch/static/robots.txt conteudo_branch/static/robots.txt
          rsync -av --delete main_branch/static/uploads/ conteudo_branch/static/uploads/
          cd conteudo_branch
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet; then
            git add .
            git commit -m "chore(content): mantém branch conteudo atualizada com a main"
            git push origin conteudo
          else
            echo "Nenhuma alteração detectada, pulando commit."
          fi
